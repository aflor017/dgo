% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dgirt.r
\name{dgirt}
\alias{dgirt}
\title{Estimate dynamic group-level IRT model}
\usage{
dgirt(dgirt_data, n_iter = 2000, n_chain = 2, max_save = 2000,
  n_warm = min(10000, floor(n_iter * 3/4)), n_thin = ceiling((n_iter -
  n_warm)/(max_save/n_chain)), init_range = 1, seed = 1,
  save_pars = c("theta_bar", "xi", "gamma", "delta_gamma", "delta_tbar",
  "nu_geo", "nu_geo_prior", "kappa", "sd_item", "sd_theta", "sd_theta_bar",
  "sd_gamma", "sd_innov_gamma", "sd_innov_delta", "sd_innov_logsd", "sd_total",
  "theta_l2", "var_theta_bar_l2"), parallel = TRUE, method = "rstan",
  optimize_algorithm = "lbfgs")
}
\arguments{
\item{dgirt_data}{Data prepared for use with `dgirt` by `wrangle`.}

\item{n_iter}{See \code{iter} in \code{rstan::stan}.}

\item{n_chain}{See \code{chains} in \code{rstan::stan}.}

\item{max_save}{Maximum iterations to save; only used in the default value of n_thin.}

\item{n_warm}{See \code{warmup} in \code{rstan::stan}.}

\item{n_thin}{See \code{thin} in \code{rstan::stan}.}

\item{init_range}{See \code{init} in \code{rstan::stan}.}

\item{seed}{See \code{seed} in \code{rstan::stan}.}

\item{save_pars}{See \code{pars} in \code{rstan::rstan_options}}

\item{parallel}{See \code{rstan::rstan_options(auto_write = parallel)}.}

\item{method}{By default, `rstan::stan` estimates the model using MCMC
sampling. Alternatively, `cmdstan optimize` or `cmdstan variational`
can be used if CmdStan is available. Note that these methods
are faster than MCMC sampling but return only point estimates.
See \url{http://mc-stan.org/interfaces/cmdstan.html} for CmdStan
installation instructions.}

\item{optimize_algorithm}{The optimization algorithm for CmdStan to use if
`method` is `"optimize"`, one of `"bfgs"`, `"lbfgs"` (the default),
and `"newton"`. See CmdStan documentation for details.}
}
\value{
An object of S4 class `stanfit` as returned by `rstan::stan`.
}
\description{
Estimate dynamic group-level IRT model
}

